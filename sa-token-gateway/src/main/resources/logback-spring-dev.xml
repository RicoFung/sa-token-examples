<?xml version="1.0" encoding="UTF-8"?>
<included>

    <!-- 应用名称 -->
    <springProperty scope="context" name="APP_NAME" source="spring.application.name"/>
    <!-- 日志级别 -->
    <springProperty scope="context" name="LOG_ROOT_LEVEL" source="logging.level.root" defaultValue="INFO"/>
    <!-- 日志根目录-->
   	<springProperty scope="context" name="LOG_HOME" source="logging.path" defaultValue="logs"/>
    <!-- 日志文件路径+日期-->
   	<property name="LOG_DIR" value="${LOG_HOME}/%d{yyyyMMdd}" />
    <!-- 日志文件前缀-->
    <property name="LOG_PREFIX" value="${APP_NAME}" />
    <!-- 日志文件后缀-->
    <property name="LOG_SUFFIX" value="${APP_NAME}" />
    <!-- 日志文件编码-->
    <property name="LOG_CHARSET" value="UTF-8" />
    <!--对日志进行格式化-->
    <property name="LOG_MSG" value="[%X{traceId:-}] | [%X{spanId}] | [${PID:-}] | [%d{yyyy-MM-dd HH:mm:ss.SSS}] | [%level] | [%thread] | [%logger{36}|%M|%line] | - %msg%n "/>
    <!-- 
    <property name="LOG_MSG" value="- | [%d{yyyyMMdd HH:mm:ss.SSS}] | [%level] | [${HOSTNAME}] | [%thread] | [%logger{36}] | %msg|%n "/>
    <property name="LOG_MSG" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n "/>
     -->
    <!--文件大小，默认10MB-->
    <property name="MAX_FILE_SIZE" value="10MB" />
    <!-- 配置日志的滚动时间 ，表示只保留最近 10 天的日志-->
    <property name="MAX_HISTORY" value="10"/>
    
	<!-- ================================================================ -->
    <!-- APPENDER: STDOUT -->
	<!-- ================================================================ -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
            <pattern>${LOG_MSG}</pattern>
		</encoder>
	</appender>

	<!-- ================================================================ -->
    <!-- APPENDER: FILE_ALL -->
    <!-- APPENDER: FILE_ERROR -->
	<!-- ================================================================ -->
    <appender name="FILE_ALL" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志文件路径，日志文件名称-->
        <File>${LOG_HOME}/all_${LOG_SUFFIX}.log</File>
        <!-- 设置滚动策略，当天的日志大小超过 ${MAX_FILE_SIZE} 文件大小时候，新的内容写入新的文件， 默认10MB -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件路径，新的 ALL 日志文件名称，“ i ” 是个变量 -->
            <FileNamePattern>${LOG_DIR}/all_${LOG_SUFFIX}.%i.log.zip</FileNamePattern>
            <!-- 配置日志的滚动时间 ，表示只保留最近 10 天的日志-->
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
            <!--当天的日志大小超过 ${MAX_FILE_SIZE} 文件大小时候，新的内容写入新的文件， 默认10MB-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!-- 输出的日志内容格式化-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${LOG_MSG}</pattern>
        </layout>
    </appender>
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 下面为配置只输出error级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <OnMismatch>DENY</OnMismatch>
            <OnMatch>ACCEPT</OnMatch>
        </filter>
        <!--日志文件路径，日志文件名称-->
        <File>${LOG_HOME}/err_${LOG_SUFFIX}.log</File>
        <!-- 设置滚动策略，当天的日志大小超过 ${MAX_FILE_SIZE} 文件大小时候，新的内容写入新的文件， 默认10MB -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件路径，新的 ERR 日志文件名称，“ i ” 是个变量 -->
            <FileNamePattern>${LOG_DIR}/err_${LOG_SUFFIX}.%i.log.zip</FileNamePattern>
            <!-- 配置日志的滚动时间 ，表示只保留最近 10 天的日志-->
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
            <!--当天的日志大小超过 ${MAX_FILE_SIZE} 文件大小时候，新的内容写入新的文件， 默认10MB-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!-- 输出的日志内容格式化-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${LOG_MSG}</Pattern>
        </layout>
    </appender>
    
	<!-- ================================================================ -->
	<!-- APPENDER: GRAYLOG -->
	<!-- 发送GELF UDP 到 graylog -->
	<!-- 使用第三方组件 https://github.com/osiegmar/logback-gelf -->
	<!-- ================================================================ -->
	<appender name="GELF" class="de.siegmar.logbackgelf.GelfUdpAppender">
		<graylogHost>grayloguat.moco.com</graylogHost>
		<graylogPort>12201</graylogPort>
		<!--以下为可选配置 -->
		<maxChunkSize>508</maxChunkSize>
		<useCompression>true</useCompression>
		<encoder class="de.siegmar.logbackgelf.GelfEncoder">
			<originHost>grayloguat.moco.com</originHost>
			<includeRawMessage>false</includeRawMessage>
			<includeMarker>true</includeMarker>
			<includeMdcData>true</includeMdcData>
			<includeCallerData>true</includeCallerData>
			<includeRootCauseData>true</includeRootCauseData>
			<includeLevelName>true</includeLevelName>
			<shortPatternLayout class="ch.qos.logback.classic.PatternLayout">
				<pattern>${LOG_MSG}</pattern>
			</shortPatternLayout>
			<fullPatternLayout class="ch.qos.logback.classic.PatternLayout">
				<pattern>${LOG_MSG}</pattern>
			</fullPatternLayout>
			<staticField>application:${APP_NAME}</staticField>
			<staticField>environment:DEV</staticField>
		</encoder>
	</appender>

	<!-- ================================================================ -->
	<!-- LOGGER -->
	<!-- ================================================================ -->
    <logger name="org.springframework" level="ERROR" additivity="false">
        <appender-ref ref="GELF"/>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE_ALL"/>
        <appender-ref ref="FILE_ERROR"/>
    </logger>
    <logger name="com.common" level="DEBUG" additivity="false">
        <appender-ref ref="GELF"/>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE_ALL"/>
        <appender-ref ref="FILE_ERROR"/>
    </logger>
    <logger name="chok.component" level="DEBUG" additivity="false">
        <appender-ref ref="GELF"/>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE_ALL"/>
        <appender-ref ref="FILE_ERROR"/>
    </logger>
    <logger name="chok.redis" level="DEBUG" additivity="false">
        <appender-ref ref="GELF"/>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE_ALL"/>
        <appender-ref ref="FILE_ERROR"/>
    </logger>
    <logger name="com.epo" level="DEBUG" additivity="false">
        <appender-ref ref="GELF"/>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE_ALL"/>
        <appender-ref ref="FILE_ERROR"/>
    </logger>

	<!-- ================================================================ -->
	<!-- ROOT -->
	<!-- ================================================================ -->
    <root level="${LOG_ROOT_LEVEL}">
        <appender-ref ref="GELF"/>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE_ALL"/>
        <appender-ref ref="FILE_ERROR"/>
	</root>

</included>